@{
    //page title
    ViewBag.Title = T("Admin.Configuration.Tax.Categories").Text;
    //active menu item (system name)
    Html.SetActiveMenuItemSystemName("Tax categories");
}

@Html.AntiForgeryToken()
<div class="content-header clearfix">
    <h1 class="pull-left">
        @T("Admin.Configuration.Tax.Categories")
    </h1>
    <div class="pull-right">
        &nbsp;
    </div>
</div>

<div class="content">
    <div class="form-horizontal">
        <div class="panel-group">
            <div class="panel panel-default">
                <div class="panel-body">
                    <div id="tax-categories-grid"></div>

                    <script>
                        $(document).ready(function () {
                            $("#tax-categories-grid").kendoGrid({
                                dataSource: {
                                    type: "json",
                                    transport: {
                                        read: {
                                            url: "@Url.Action("ListTaxResponseStorage", "Tax")",
                                            type: "POST",
                                            dataType: "json",
                                            data: addAntiForgeryToken
                                        },
                                        create: {
                                            url: "@Html.Raw(Url.Action("CategoryAdd", "Tax"))",
                                            type: "POST",
                                            dataType: "json",
                                            data: addAntiForgeryToken
                                        },
                                        update: {
                                            url: "@Html.Raw(Url.Action("CategoryUpdate", "Tax"))",
                                            type: "POST",
                                            dataType: "json",
                                            data: addAntiForgeryToken
                                        },
                                        destroy: {
                                            url: "@Html.Raw(Url.Action("CategoryDelete", "Tax"))",
                                            type: "POST",
                                            dataType: "json",
                                            data: addAntiForgeryToken
                                        }
                                    },
                                    schema: {
                                        data: "Data",
                                        total: "Total",
                                        model: {
                                            id: "Id",
                                            fields: {                                                                                                            
                                                Id: { editable: false, type: "number" },
                                                "ProductID": { type: "string" },
                                            }
                                        }
                                    },
                                    requestEnd: function (e) {
                                        if (e.type == "create" || e.type == "update") {
                                            this.read();
                                        }
                                    },  
                                    error: function (e) {
                                        display_kendoui_grid_error(e);
                                        // Cancel the changes
                                        this.cancelChanges();
                                    },
                                    serverPaging: true,
                                    serverFiltering: true,
                                    serverSorting: true
                                },
                                pageable: {
                                    refresh: true,
                                    numeric: false,
                                    previousNext: false,
                                    info: false
                                },
                                toolbar: [{ name: "create", text: "@T("Admin.Common.AddNewRecord")" }],
                                editable: {
                                    confirmation: "@T("Admin.Common.DeleteConfirmation")",
                                    mode: "inline"
                                },
                                scrollable: false,
                                dataBound: onDataBound,
                                columns: [
                                {
                                    field: "AddedDate",
                                    title: "@T("Admin.Configuration.Tax.Categories.Fields.Name")",
                                    width: 100,
                                    template: "#= kendo.toString(kendo.parseDate(AddedDate, 'yyyy-MM-dd'), 'MM/dd/yyyy') #"
 
                                },
                                  {
                                      field: "ProductId",
                                      title: "@T("Admin.Configuration.Tax.Categories.Fields.Name")",
                                    width: 100,
                                   
                                    }

                                , {
                                    command: [
                                    {
                                        name: "edit",
                                        text: {
                                            edit: "@T("Admin.Common.Edit")",
                                            update: "@T("Admin.Common.Update")",
                                            cancel: "@T("Admin.Common.Cancel")"
                                        }
                                    }, {
                                        name: "destroy",
                                        text: "@T("Admin.Common.Delete")"
                                    }
                                    ],
                                    width: 200
                                }
                                ]
                            });
                        });

                        function onDataBound(e) {
                            var view = this.dataSource.view();
                            
                            
                        }
                    </script>
                </div>
            </div>
        </div>
    </div>
</div>