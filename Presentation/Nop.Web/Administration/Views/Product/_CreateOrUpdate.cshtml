@model ProductModel

@Html.ValidationSummary(false)
@Html.HiddenFor(model => model.Id)

<script>
    $(document).ready(function () {
        bindBootstrapTabSelectEvent('product-edit');
    });
</script>
<script type="text/javascript">

    var tour2 = {
        id: "hello-hopscotch",
        steps: [
            {
                title: "Product Info Tab",
                content: "This tab shows all the basic product information.",
                target: document.querySelectorAll('[data-tab-name="tab-info"]'),
                placement: "bottom"
            }
        ]
    };


    //See _Header.cshtml for the ID
    // $('#page-help-button').click(function () {
    hopscotch.startTour(tour2);
    //});

</script>


<div class="content">
    <div class="form-horizontal">
        <div class="row" id="settingMode">
            <!-- NU-8 -->
            <div class="col-md-12 clearfix">
                <div class="pull-left">
                    @Html.Action("Mode", "Setting", new { modeName = "product-advanced-mode" })
                </div>
                <button type="button" class="btn btn-info pull-left margin-l-10" id="product-editor-settings" data-toggle="modal" data-target="#productsettings-window">
                    <i class="fa fa-gear"></i>
                    @T("Admin.Configuration.Settings.ProductEditor.Button")
                </button>
            </div>
        </div>
        <!-- #region NU-8 -->
        @if (Model.IsLoggedAs == "VENDOR" || Model.IsLoggedAs == "STORE.ADMIN")
        {
            <script>
                $("#settingMode").hide();
            </script>
        }
        <!-- #endregion -->
        <div id="product-edit" class="nav-tabs-custom">
            <ul class="nav nav-tabs" id="product-nav-tabs">
                @Html.RenderBootstrapTabHeader("tab-info", @T("Admin.Catalog.Products.Info"), true)
                @Html.RenderBootstrapTabHeader("tab-seo", @T("Admin.Common.SEO"), customCssClass: Model.ProductEditorSettingsModel.Seo ? "" : "advanced-setting")
                @Html.RenderBootstrapTabHeader("tab-pictures", @T("Admin.Catalog.Products.Pictures"))
                @Html.RenderBootstrapTabHeader("tab-product-attributes", @T("Admin.Catalog.Products.ProductAttributes"), customCssClass: Model.ProductEditorSettingsModel.ProductAttributes ? "" : "advanced-setting")
                @Html.RenderBootstrapTabHeader("tab-specification-attributes", @T("Admin.Catalog.Products.SpecificationAttributes"), customCssClass: Model.ProductEditorSettingsModel.SpecificationAttributes ? "" : "advanced-setting")
                @if (Model.Id > 0)
                {
                    if (!Model.IsMaster)
                    {
                        @Html.RenderBootstrapTabHeader("tab-purchased-with-orders", @T("Admin.Catalog.Products.PurchasedWithOrders"), customCssClass: Model.ProductEditorSettingsModel.PurchasedWithOrders ? "" : "advanced-setting")
                    }
                    else
                    {
                        @Html.RenderBootstrapTabHeader("tab-stores-localized", @T("Admin.Catalog.Products.LocalizedProducts"))
                    }
                }

            </ul>
            <div class="tab-content">
                @Html.RenderBootstrapTabContent("tab-info", @TabInfo(), true)
                @Html.RenderBootstrapTabContent("tab-seo", @TabSeo())
                @Html.RenderBootstrapTabContent("tab-pictures", @TabPictures())
                @Html.RenderBootstrapTabContent("tab-specification-attributes", @TabSpecificationAttributes())
                @Html.RenderBootstrapTabContent("tab-product-attributes", @TabProductAttributes())
                @if (Model.Id > 0)
                {
                    if (!Model.IsMaster)
                    {
                        @Html.RenderBootstrapTabContent("tab-purchased-with-orders", @TabPurchasedWithOrders())
                    }
                    else
                    {
                        @Html.RenderBootstrapTabContent("tab-stores-localized", TabStores())
                    }
                }


            </div>
        </div>
    </div>
</div>

@{
    //custom tabs
    var eventMessage = new AdminTabStripCreated(this.Html, "product-edit");
    EngineContext.Current.Resolve<IEventPublisher>().Publish(eventMessage);
    foreach (var eventBlock in eventMessage.BlocksToRender)
    {
        @eventBlock
    }
}

@*save selected tab name*@
<input type="hidden" id="selected-tab-name" name="selected-tab-name" value="@(Html.GetSelectedTabName())">

@helper TabInfo()
{
    @Html.Partial("_CreateOrUpdate.Info", Model)
}

@helper TabSeo()
{
    @Html.Partial("_CreateOrUpdate.SEO", Model)
}

@helper TabPictures()
{
    @Html.Partial("_CreateOrUpdate.Pictures", Model)
}

@helper TabProductAttributes()
{
    @Html.Partial("_CreateOrUpdate.ProductAttributes", Model)
}

@helper TabSpecificationAttributes()
{
    @Html.Partial("_CreateOrUpdate.SpecificationAttributes", Model)
}

@helper TabPurchasedWithOrders()
{
    @Html.Partial("_CreateOrUpdate.PurchasedWithOrders", Model)
}

@helper TabStores()
{
    @Html.Partial("_CreateOrUpdate.Stores", Model)
}
<!-- #region NU-9 -->
@{
    if (!Model.IsMaster && Model.VendorId > 0)
    {
        <script>
            $(document).ready(function () {
                $(".tab-content").each(function () {
                    $(this).find("INPUT[type='text']").each(function () {
                        var exclude = ["ProductTags", "AvailableStartDateTimeUtc", "AvailableEndDateTimeUtc", "DisplayOrder", "MarkAsNewStartDateTimeUtc", "MarkAsNewEndDateTimeUtc"];
                        if ($.inArray(this.id, exclude) == -1 && $(this).attr("id")) {
                            $(this).prop("readonly", "true");
                            $(this).prev().prop("readonly", "true");
                            $(this).closest("div").find(".k-select").hide();
                            $(this).closest("div").find(".k-numeric-wrap").css("background", "#FFFFFF");
                            $(this).css("background-color", "#eee");
                            $(this).prev().css("background-color", "#eee");
                        }
                    });

                    $(this).find("SELECT").each(function () {
                        $(this).css("pointer-events", "none");
                        $(this).css("background-color", "#eee");
                    });

                    $(this).find("TEXTAREA").each(function () {
                        var exclude = ["AdminComment"];
                        if ($.inArray(this.id, exclude) == -1) {
                            $(this).prop("readonly", "true");
                        }
                    })

                    $(this).find("INPUT[type='checkbox']").each(function () {
                        var exclude = ["Published", "ShowOnHomePage", "AllowCustomerReviews", "MarkAsNew", "DisableBuyButton", "DisableWishlistButton"];
                        if ($.inArray(this.id, exclude) == -1) {
                            $(this).unbind();
                            $(this).click(function () {
                                return false;
                            });
                            $(this).keydown(function () {
                                return false;
                            });
                        }
                    })

                    $(this).find("INPUT[data-role='datetimepicker']").each(function () {
                        var exclude = ["AvailableStartDateTimeUtc", "AvailableEndDateTimeUtc", "MarkAsNewStartDateTimeUtc", "MarkAsNewEndDateTimeUtc"];
                        if ($.inArray(this.id, exclude) == -1) {
                            $(this).prop("readonly", "true");
                            $(this).closest("div").find(".k-select").hide();
                            $(this).closest("div").find(".k-picker-wrap").css("background", "#FFFFFF");
                        }
                    })

                    $(this).find(".k-widget.k-multiselect.k-header").each(function () {
                        $(this).unbind();
                        $(this).find(".k-icon.k-delete").each(function () {
                            $(this)[0].outerHTML = '&nbsp;'
                        });
                    })

                    $(this).find("BUTTON").hide();

                    $(".k-toolbar.k-grid-toolbar").hide();

                    $(".panel-heading:contains('Add')").parent().hide();
                })
            })

            function DropDownReadOnly(id) {
                $("#" + id).parent().html($("#" + id + " option:selected").text());
            }
        </script>
    }
}

@if (Model.IsLoggedAs == "STORE.ADMIN")
{
    <script>
        $(document).ready(function () {
            $(this).find("INPUT[data-role='datetimepicker']").each(function () {
                var exclude = ["AvailableStartDateTimeUtc", "AvailableEndDateTimeUtc", "MarkAsNewStartDateTimeUtc", "MarkAsNewEndDateTimeUtc"];
                if ($.inArray(this.id, exclude) == -1) {
                    $(this).prop("readonly", "true");
                    $(this).closest("div").find(".k-select").hide();
                    $(this).closest("div").find(".k-picker-wrap").css("background", "#FFFFFF");
                }
            })
        });
    </script>
}

<!-- #endregion -->
