@model Nop.Plugin.Tax.Vertex.Models.TaxVertexModel
@using Nop.Web.Framework;

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    <div class="panel-group">
        <div class="panel panel-default">
            <div class="panel-body">
                <p>
                    To enable this tax provider, you'll need to:<br />
                    <br />
                    1. <a href="https://www.Vertex.com" target="_blank">Create an Vertex account</a><br />
                    2. Log in at the <a href="https://admin-avatax.Vertex.net/login.aspx" target="_blank">production service</a>
                       or at the <a href="https://admin-development.Vertex.net/login.aspx target=" _blank"> development service</a><br />
                    3. Add a company and some nexus jurisdiction selections to get any tax results<br />
                    4. Fill in your Vertex account details below<br />
                </p>
                <div class="form-group">
                    <div class="col-md-3">
                        @Html.NopLabelFor(model => model.AccountId)
                    </div>
                    <div class="col-md-9">
                        @Html.NopEditorFor(model => model.AccountId)
                        @Html.ValidationMessageFor(model => model.AccountId)
                    </div>
                </div>
                <div class="form-group">
                    <div class="col-md-3">
                        @Html.NopLabelFor(model => model.LicenseKey)
                    </div>
                    <div class="col-md-9">
                        @Html.NopEditorFor(model => model.LicenseKey)
                        @Html.ValidationMessageFor(model => model.LicenseKey)
                    </div>
                </div>
                <div class="form-group">
                    <div class="col-md-3">
                        @Html.NopLabelFor(model => model.CompanyCode)
                    </div>
                    <div class="col-md-9">
                        @Html.NopEditorFor(model => model.CompanyCode)
                        @Html.ValidationMessageFor(model => model.CompanyCode)
                    </div>
                </div>
                <div class="form-group">
                    <div class="col-md-3">
                        @Html.NopLabelFor(model => model.IsSandboxEnvironment)
                    </div>
                    <div class="col-md-9">
                        @Html.NopEditorFor(model => model.IsSandboxEnvironment)
                        @Html.ValidationMessageFor(model => model.IsSandboxEnvironment)
                    </div>
                </div>
                <div class="form-group">
                    <div class="col-md-3">
                        @Html.NopLabelFor(model => model.CommitTransactions)
                    </div>
                    <div class="col-md-9">
                        @Html.NopEditorFor(model => model.CommitTransactions)
                        @Html.ValidationMessageFor(model => model.CommitTransactions)
                    </div>
                </div>
                <div class="form-group">
                    <div class="col-md-3">
                        @Html.NopLabelFor(model => model.ValidateAddresses)
                    </div>
                    <div class="col-md-9">
                        @Html.NopEditorFor(model => model.ValidateAddresses)
                        @Html.ValidationMessageFor(model => model.ValidateAddresses)
                    </div>
                </div>
                <div class="form-group">
                    <div class="col-md-9 col-md-offset-3">
                        <div class="input-group input-group-short">
                            <div class="input-group-text">
                                <button type="submit" name="save" class="btn btn-primary">
                                    @T("Admin.Common.Save")
                                </button>
                            </div>
                            @if (Model.IsConfigured)
                            {
                                <div class="input-group-btn">
                                    <button type="submit" name="testConnection" class="btn btn-info">
                                        @T("Plugins.Tax.Vertex.TestConnection")
                                    </button>
                                </div>
                            }
                        </div>
                    </div>
                </div>
            </div>
        </div>
        @if (Model.IsConfigured)
        {
            <div class="panel panel-default">

                <script type="text/javascript">
                    $(document).ready(function() {
                        $("#@Html.FieldIdFor(model => model.TestAddress.CountryId)").change(function(){
                            var selectedItem = $(this).val();
                            var ddlStates = $("#@Html.FieldIdFor(model => model.TestAddress.RegionId)");
                            $.ajax({
                                cache: false,
                                type: "GET",
                                url: "@(Url.Action("GetStatesByCountryId"))",
                                data: { "countryId": selectedItem},
                                success: function(data) {
                                    ddlStates.html('');
                                    $.each(data, function(id, option) {
                                        ddlStates.append($('<option></option>').val(option.id).html(option.name));
                                    });
                                },
                                error: function(xhr, ajaxOptions, thrownError) {
                                    alert('Failed to retrieve states.');
                                }
                            });
                        });
                    });
                </script>

                <div class="panel-body">
                    <div class="form-group">
                        <div class="col-md-3">
                            @Html.NopLabelFor(model => model.TestAddress.CountryId)
                        </div>
                        <div class="col-md-9">
                            @Html.NopDropDownListFor(model => model.TestAddress.CountryId, Model.TestAddress.AvailableCountries)
                            @Html.ValidationMessageFor(model => model.TestAddress.CountryId)
                        </div>
                    </div>
                    <div class="form-group">
                        <div class="col-md-3">
                            @Html.NopLabelFor(model => model.TestAddress.RegionId)
                        </div>
                        <div class="col-md-9">
                            @Html.NopDropDownListFor(model => model.TestAddress.RegionId, Model.TestAddress.AvailableStates)
                            @Html.ValidationMessageFor(model => model.TestAddress.RegionId)
                        </div>
                    </div>
                    <div class="form-group">
                        <div class="col-md-3">
                            @Html.NopLabelFor(model => model.TestAddress.City)
                        </div>
                        <div class="col-md-9">
                            @Html.NopEditorFor(model => model.TestAddress.City)
                            @Html.ValidationMessageFor(model => model.TestAddress.City)
                        </div>
                    </div>
                    <div class="form-group">
                        <div class="col-md-3">
                            @Html.NopLabelFor(model => model.TestAddress.Address)
                        </div>
                        <div class="col-md-9">
                            @Html.NopEditorFor(model => model.TestAddress.Address)
                            @Html.ValidationMessageFor(model => model.TestAddress.Address)
                        </div>
                    </div>
                    <div class="form-group">
                        <div class="col-md-3">
                            @Html.NopLabelFor(model => model.TestAddress.ZipPostalCode)
                        </div>
                        <div class="col-md-9">
                            @Html.NopEditorFor(model => model.TestAddress.ZipPostalCode)
                            @Html.ValidationMessageFor(model => model.TestAddress.ZipPostalCode)
                        </div>
                    </div>
                    <div class="form-group">
                        <div class="col-md-9 col-md-offset-3">
                            <button type="submit" name="testTax" class="btn btn-info">
                                @T("Plugins.Tax.Vertex.TestTax")
                            </button>
                        </div>
                    </div>
                    <div class="form-group">
                        <div class="col-md-12" style="white-space: pre-line">
                            @Html.Raw(Model.TestTaxResult)
                        </div>
                    </div>
                </div>
            </div>
        }
    </div>
}