//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace BackFillForReports
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class BackFillReportsScript : DbContext
    {
        public BackFillReportsScript()
            : base("name=BackFillReportsScript")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<AclRecord> AclRecords { get; set; }
        public virtual DbSet<ActivityLog> ActivityLogs { get; set; }
        public virtual DbSet<ActivityLogType> ActivityLogTypes { get; set; }
        public virtual DbSet<Address> Addresses { get; set; }
        public virtual DbSet<AddressAttribute> AddressAttributes { get; set; }
        public virtual DbSet<AddressAttributeValue> AddressAttributeValues { get; set; }
        public virtual DbSet<Affiliate> Affiliates { get; set; }
        public virtual DbSet<BackInStockSubscription> BackInStockSubscriptions { get; set; }
        public virtual DbSet<BitShift_FirstData_SavedCard> BitShift_FirstData_SavedCard { get; set; }
        public virtual DbSet<BitShift_FirstData_SavedCard_o> BitShift_FirstData_SavedCard_o { get; set; }
        public virtual DbSet<BitShift_FirstData_StoreLicenseKey> BitShift_FirstData_StoreLicenseKey { get; set; }
        public virtual DbSet<BitShift_FirstData_StoreLicenseKey_1> BitShift_FirstData_StoreLicenseKey_1 { get; set; }
        public virtual DbSet<BitShift_FirstData_StoreSetting> BitShift_FirstData_StoreSetting { get; set; }
        public virtual DbSet<BitShift_FirstData_StoreSetting_1> BitShift_FirstData_StoreSetting_1 { get; set; }
        public virtual DbSet<BlogComment> BlogComments { get; set; }
        public virtual DbSet<BlogPost> BlogPosts { get; set; }
        public virtual DbSet<Campaign> Campaigns { get; set; }
        public virtual DbSet<CardAccessRecord> CardAccessRecords { get; set; }
        public virtual DbSet<Category> Categories { get; set; }
        public virtual DbSet<CategoryTemplate> CategoryTemplates { get; set; }
        public virtual DbSet<CheckoutAttribute> CheckoutAttributes { get; set; }
        public virtual DbSet<CheckoutAttributeValue> CheckoutAttributeValues { get; set; }
        public virtual DbSet<Country> Countries { get; set; }
        public virtual DbSet<CrossSellProduct> CrossSellProducts { get; set; }
        public virtual DbSet<Currency> Currencies { get; set; }
        public virtual DbSet<Customer> Customers { get; set; }
        public virtual DbSet<CustomerAttribute> CustomerAttributes { get; set; }
        public virtual DbSet<CustomerAttributeValue> CustomerAttributeValues { get; set; }
        public virtual DbSet<CustomerRole> CustomerRoles { get; set; }
        public virtual DbSet<DeliveryDate> DeliveryDates { get; set; }
        public virtual DbSet<Discount> Discounts { get; set; }
        public virtual DbSet<DiscountRequirement> DiscountRequirements { get; set; }
        public virtual DbSet<DiscountUsageHistory> DiscountUsageHistories { get; set; }
        public virtual DbSet<Donation> Donations { get; set; }
        public virtual DbSet<Download> Downloads { get; set; }
        public virtual DbSet<EmailAccount> EmailAccounts { get; set; }
        public virtual DbSet<EmailType> EmailTypes { get; set; }
        public virtual DbSet<ExternalAuthenticationRecord> ExternalAuthenticationRecords { get; set; }
        public virtual DbSet<Forums_Forum> Forums_Forum { get; set; }
        public virtual DbSet<Forums_Group> Forums_Group { get; set; }
        public virtual DbSet<Forums_Post> Forums_Post { get; set; }
        public virtual DbSet<Forums_PostVote> Forums_PostVote { get; set; }
        public virtual DbSet<Forums_PrivateMessage> Forums_PrivateMessage { get; set; }
        public virtual DbSet<Forums_Subscription> Forums_Subscription { get; set; }
        public virtual DbSet<Forums_Topic> Forums_Topic { get; set; }
        public virtual DbSet<FulfillmentCalDay> FulfillmentCalDays { get; set; }
        public virtual DbSet<GenericAttribute> GenericAttributes { get; set; }
        public virtual DbSet<GiftCard> GiftCards { get; set; }
        public virtual DbSet<GiftCardUsageHistory> GiftCardUsageHistories { get; set; }
        public virtual DbSet<GLSpecificationAttribute> GLSpecificationAttributes { get; set; }
        public virtual DbSet<GLSpecificationAttributeOption> GLSpecificationAttributeOptions { get; set; }
        public virtual DbSet<GoogleProduct> GoogleProducts { get; set; }
        public virtual DbSet<Language> Languages { get; set; }
        public virtual DbSet<LocaleStringResource> LocaleStringResources { get; set; }
        public virtual DbSet<LocalizedProperty> LocalizedProperties { get; set; }
        public virtual DbSet<Log> Logs { get; set; }
        public virtual DbSet<Manufacturer> Manufacturers { get; set; }
        public virtual DbSet<ManufacturerTemplate> ManufacturerTemplates { get; set; }
        public virtual DbSet<MealPlan> MealPlans { get; set; }
        public virtual DbSet<MeasureDimension> MeasureDimensions { get; set; }
        public virtual DbSet<MeasureWeight> MeasureWeights { get; set; }
        public virtual DbSet<MessageTemplate> MessageTemplates { get; set; }
        public virtual DbSet<News> News { get; set; }
        public virtual DbSet<NewsComment> NewsComments { get; set; }
        public virtual DbSet<NewsLetterSubscription> NewsLetterSubscriptions { get; set; }
        public virtual DbSet<Order> Orders { get; set; }
        public virtual DbSet<OrderDetail> OrderDetails { get; set; }
        public virtual DbSet<OrderItem> OrderItems { get; set; }
        public virtual DbSet<orderitem_fulfillmentdate_bkp_070219> orderitem_fulfillmentdate_bkp_070219 { get; set; }
        public virtual DbSet<OrderNote> OrderNotes { get; set; }
        public virtual DbSet<PermissionRecord> PermissionRecords { get; set; }
        public virtual DbSet<Picture> Pictures { get; set; }
        public virtual DbSet<Poll> Polls { get; set; }
        public virtual DbSet<PollAnswer> PollAnswers { get; set; }
        public virtual DbSet<PollVotingRecord> PollVotingRecords { get; set; }
        public virtual DbSet<PredefinedProductAttributeValue> PredefinedProductAttributeValues { get; set; }
        public virtual DbSet<Product> Products { get; set; }
        public virtual DbSet<Product_Category_Mapping> Product_Category_Mapping { get; set; }
        public virtual DbSet<Product_GLSpecificationAttribute_Mapping> Product_GLSpecificationAttribute_Mapping { get; set; }
        public virtual DbSet<Product_Manufacturer_Mapping> Product_Manufacturer_Mapping { get; set; }
        public virtual DbSet<Product_PickupWarehouses_Mapping> Product_PickupWarehouses_Mapping { get; set; }
        public virtual DbSet<Product_Picture_Mapping> Product_Picture_Mapping { get; set; }
        public virtual DbSet<Product_ProductAttribute_Mapping> Product_ProductAttribute_Mapping { get; set; }
        public virtual DbSet<Product_SpecificationAttribute_Mapping> Product_SpecificationAttribute_Mapping { get; set; }
        public virtual DbSet<ProductAttribute> ProductAttributes { get; set; }
        public virtual DbSet<ProductAttributeCombination> ProductAttributeCombinations { get; set; }
        public virtual DbSet<ProductAttributeValue> ProductAttributeValues { get; set; }
        public virtual DbSet<ProductGlCodeMapping> ProductGlCodeMappings { get; set; }
        public virtual DbSet<ProductReview> ProductReviews { get; set; }
        public virtual DbSet<ProductReviewHelpfulness> ProductReviewHelpfulnesses { get; set; }
        public virtual DbSet<ProductTag> ProductTags { get; set; }
        public virtual DbSet<ProductTemplate> ProductTemplates { get; set; }
        public virtual DbSet<ProductWarehouseInventory> ProductWarehouseInventories { get; set; }
        public virtual DbSet<QueuedEmail> QueuedEmails { get; set; }
        public virtual DbSet<RecurringPayment> RecurringPayments { get; set; }
        public virtual DbSet<RecurringPaymentHistory> RecurringPaymentHistories { get; set; }
        public virtual DbSet<RelatedProduct> RelatedProducts { get; set; }
        public virtual DbSet<ReturnRequest> ReturnRequests { get; set; }
        public virtual DbSet<ReturnRequestAction> ReturnRequestActions { get; set; }
        public virtual DbSet<ReturnRequestReason> ReturnRequestReasons { get; set; }
        public virtual DbSet<RewardPointsHistory> RewardPointsHistories { get; set; }
        public virtual DbSet<SAP_SalesJournal> SAP_SalesJournal { get; set; }
        public virtual DbSet<ScheduleTask> ScheduleTasks { get; set; }
        public virtual DbSet<SearchTerm> SearchTerms { get; set; }
        public virtual DbSet<Setting> Settings { get; set; }
        public virtual DbSet<Shipment> Shipments { get; set; }
        public virtual DbSet<ShipmentItem> ShipmentItems { get; set; }
        public virtual DbSet<ShippingMethod> ShippingMethods { get; set; }
        public virtual DbSet<ShoppingCartItem> ShoppingCartItems { get; set; }
        public virtual DbSet<SpecificationAttribute> SpecificationAttributes { get; set; }
        public virtual DbSet<SpecificationAttributeOption> SpecificationAttributeOptions { get; set; }
        public virtual DbSet<StagingTaxCategory> StagingTaxCategories { get; set; }
        public virtual DbSet<StateProvince> StateProvinces { get; set; }
        public virtual DbSet<Store> Stores { get; set; }
        public virtual DbSet<Store_Email_Mapping> Store_Email_Mapping { get; set; }
        public virtual DbSet<StoreCommission> StoreCommissions { get; set; }
        public virtual DbSet<StoreMapping> StoreMappings { get; set; }
        public virtual DbSet<StorePickupPoint> StorePickupPoints { get; set; }
        public virtual DbSet<TaxCategory> TaxCategories { get; set; }
        public virtual DbSet<TaxRate> TaxRates { get; set; }
        public virtual DbSet<TierPrice> TierPrices { get; set; }
        public virtual DbSet<Topic> Topics { get; set; }
        public virtual DbSet<TopicTemplate> TopicTemplates { get; set; }
        public virtual DbSet<TridionProfileMapping> TridionProfileMappings { get; set; }
        public virtual DbSet<UrlRecord> UrlRecords { get; set; }
        public virtual DbSet<Vendor> Vendors { get; set; }
        public virtual DbSet<VendorMapping> VendorMappings { get; set; }
        public virtual DbSet<VendorNote> VendorNotes { get; set; }
        public virtual DbSet<Warehouse> Warehouses { get; set; }
        public virtual DbSet<Commuter> Commuters { get; set; }
        public virtual DbSet<Commuter_old> Commuter_old { get; set; }
        public virtual DbSet<Commuter1> Commuters1 { get; set; }
        public virtual DbSet<GLCode> GLCodes { get; set; }
        public virtual DbSet<product_5_22_19> product_5_22_19 { get; set; }
        public virtual DbSet<product_backup_5_20> product_backup_5_20 { get; set; }
        public virtual DbSet<product_bkp_1_21> product_bkp_1_21 { get; set; }
        public virtual DbSet<product_bkp_1_22> product_bkp_1_22 { get; set; }
        public virtual DbSet<Product_BKP_3_11> Product_BKP_3_11 { get; set; }
        public virtual DbSet<Product_BKP111> Product_BKP111 { get; set; }
        public virtual DbSet<Product_GLCode_Calc> Product_GLCode_Calc { get; set; }
        public virtual DbSet<Product_GlCode_Mapping> Product_GlCode_Mapping { get; set; }
        public virtual DbSet<product_glcode_mapping_5_21> product_glcode_mapping_5_21 { get; set; }
        public virtual DbSet<Product_glcode_mapping_5_22> Product_glcode_mapping_5_22 { get; set; }
        public virtual DbSet<product_glcode_mapping_5_28> product_glcode_mapping_5_28 { get; set; }
        public virtual DbSet<product_glcode_mappingBKP111> product_glcode_mappingBKP111 { get; set; }
        public virtual DbSet<ProductRelation> ProductRelations { get; set; }
        public virtual DbSet<ProductTax> ProductTaxes { get; set; }
        public virtual DbSet<SAPOrderProcess> SAPOrderProcesses { get; set; }
        public virtual DbSet<StagingTaxCategory_bkp_1_22> StagingTaxCategory_bkp_1_22 { get; set; }
        public virtual DbSet<storebkp> storebkps { get; set; }
        public virtual DbSet<TaxResponseStorage> TaxResponseStorages { get; set; }
        public virtual DbSet<URLRecordBkp> URLRecordBkps { get; set; }
    
        [DbFunction("BackFillReportsScript", "nop_splitstring_to_table")]
        public virtual IQueryable<nop_splitstring_to_table_Result> nop_splitstring_to_table(string @string, string delimiter)
        {
            var stringParameter = @string != null ?
                new ObjectParameter("string", @string) :
                new ObjectParameter("string", typeof(string));
    
            var delimiterParameter = delimiter != null ?
                new ObjectParameter("delimiter", delimiter) :
                new ObjectParameter("delimiter", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<nop_splitstring_to_table_Result>("[BackFillReportsScript].[nop_splitstring_to_table](@string, @delimiter)", stringParameter, delimiterParameter);
        }
    
        public virtual int f_ProductLoadAllPaged(string categoryIds, Nullable<int> manufacturerId, Nullable<int> storeId, Nullable<int> vendorId, Nullable<int> warehouseId, Nullable<int> masterProductId, Nullable<int> productTypeId, Nullable<bool> visibleIndividuallyOnly, Nullable<bool> markedAsNewOnly, Nullable<int> productTagId, Nullable<bool> featuredProducts, Nullable<decimal> priceMin, Nullable<decimal> priceMax, string keywords, Nullable<bool> searchDescriptions, Nullable<bool> searchSku, Nullable<bool> searchProductTags, Nullable<bool> useFullTextSearch, Nullable<int> fullTextMode, string filteredSpecs, Nullable<int> languageId, Nullable<int> orderBy, string allowedCustomerRoleIds, Nullable<int> pageIndex, Nullable<int> pageSize, Nullable<bool> showHidden, Nullable<bool> overridePublished, Nullable<bool> overrideHideMasterProducts, Nullable<bool> loadFilterableSpecificationAttributeOptionIds, ObjectParameter filterableSpecificationAttributeOptionIds, ObjectParameter totalRecords)
        {
            var categoryIdsParameter = categoryIds != null ?
                new ObjectParameter("CategoryIds", categoryIds) :
                new ObjectParameter("CategoryIds", typeof(string));
    
            var manufacturerIdParameter = manufacturerId.HasValue ?
                new ObjectParameter("ManufacturerId", manufacturerId) :
                new ObjectParameter("ManufacturerId", typeof(int));
    
            var storeIdParameter = storeId.HasValue ?
                new ObjectParameter("StoreId", storeId) :
                new ObjectParameter("StoreId", typeof(int));
    
            var vendorIdParameter = vendorId.HasValue ?
                new ObjectParameter("VendorId", vendorId) :
                new ObjectParameter("VendorId", typeof(int));
    
            var warehouseIdParameter = warehouseId.HasValue ?
                new ObjectParameter("WarehouseId", warehouseId) :
                new ObjectParameter("WarehouseId", typeof(int));
    
            var masterProductIdParameter = masterProductId.HasValue ?
                new ObjectParameter("MasterProductId", masterProductId) :
                new ObjectParameter("MasterProductId", typeof(int));
    
            var productTypeIdParameter = productTypeId.HasValue ?
                new ObjectParameter("ProductTypeId", productTypeId) :
                new ObjectParameter("ProductTypeId", typeof(int));
    
            var visibleIndividuallyOnlyParameter = visibleIndividuallyOnly.HasValue ?
                new ObjectParameter("VisibleIndividuallyOnly", visibleIndividuallyOnly) :
                new ObjectParameter("VisibleIndividuallyOnly", typeof(bool));
    
            var markedAsNewOnlyParameter = markedAsNewOnly.HasValue ?
                new ObjectParameter("MarkedAsNewOnly", markedAsNewOnly) :
                new ObjectParameter("MarkedAsNewOnly", typeof(bool));
    
            var productTagIdParameter = productTagId.HasValue ?
                new ObjectParameter("ProductTagId", productTagId) :
                new ObjectParameter("ProductTagId", typeof(int));
    
            var featuredProductsParameter = featuredProducts.HasValue ?
                new ObjectParameter("FeaturedProducts", featuredProducts) :
                new ObjectParameter("FeaturedProducts", typeof(bool));
    
            var priceMinParameter = priceMin.HasValue ?
                new ObjectParameter("PriceMin", priceMin) :
                new ObjectParameter("PriceMin", typeof(decimal));
    
            var priceMaxParameter = priceMax.HasValue ?
                new ObjectParameter("PriceMax", priceMax) :
                new ObjectParameter("PriceMax", typeof(decimal));
    
            var keywordsParameter = keywords != null ?
                new ObjectParameter("Keywords", keywords) :
                new ObjectParameter("Keywords", typeof(string));
    
            var searchDescriptionsParameter = searchDescriptions.HasValue ?
                new ObjectParameter("SearchDescriptions", searchDescriptions) :
                new ObjectParameter("SearchDescriptions", typeof(bool));
    
            var searchSkuParameter = searchSku.HasValue ?
                new ObjectParameter("SearchSku", searchSku) :
                new ObjectParameter("SearchSku", typeof(bool));
    
            var searchProductTagsParameter = searchProductTags.HasValue ?
                new ObjectParameter("SearchProductTags", searchProductTags) :
                new ObjectParameter("SearchProductTags", typeof(bool));
    
            var useFullTextSearchParameter = useFullTextSearch.HasValue ?
                new ObjectParameter("UseFullTextSearch", useFullTextSearch) :
                new ObjectParameter("UseFullTextSearch", typeof(bool));
    
            var fullTextModeParameter = fullTextMode.HasValue ?
                new ObjectParameter("FullTextMode", fullTextMode) :
                new ObjectParameter("FullTextMode", typeof(int));
    
            var filteredSpecsParameter = filteredSpecs != null ?
                new ObjectParameter("FilteredSpecs", filteredSpecs) :
                new ObjectParameter("FilteredSpecs", typeof(string));
    
            var languageIdParameter = languageId.HasValue ?
                new ObjectParameter("LanguageId", languageId) :
                new ObjectParameter("LanguageId", typeof(int));
    
            var orderByParameter = orderBy.HasValue ?
                new ObjectParameter("OrderBy", orderBy) :
                new ObjectParameter("OrderBy", typeof(int));
    
            var allowedCustomerRoleIdsParameter = allowedCustomerRoleIds != null ?
                new ObjectParameter("AllowedCustomerRoleIds", allowedCustomerRoleIds) :
                new ObjectParameter("AllowedCustomerRoleIds", typeof(string));
    
            var pageIndexParameter = pageIndex.HasValue ?
                new ObjectParameter("PageIndex", pageIndex) :
                new ObjectParameter("PageIndex", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var showHiddenParameter = showHidden.HasValue ?
                new ObjectParameter("ShowHidden", showHidden) :
                new ObjectParameter("ShowHidden", typeof(bool));
    
            var overridePublishedParameter = overridePublished.HasValue ?
                new ObjectParameter("OverridePublished", overridePublished) :
                new ObjectParameter("OverridePublished", typeof(bool));
    
            var overrideHideMasterProductsParameter = overrideHideMasterProducts.HasValue ?
                new ObjectParameter("OverrideHideMasterProducts", overrideHideMasterProducts) :
                new ObjectParameter("OverrideHideMasterProducts", typeof(bool));
    
            var loadFilterableSpecificationAttributeOptionIdsParameter = loadFilterableSpecificationAttributeOptionIds.HasValue ?
                new ObjectParameter("LoadFilterableSpecificationAttributeOptionIds", loadFilterableSpecificationAttributeOptionIds) :
                new ObjectParameter("LoadFilterableSpecificationAttributeOptionIds", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("f_ProductLoadAllPaged", categoryIdsParameter, manufacturerIdParameter, storeIdParameter, vendorIdParameter, warehouseIdParameter, masterProductIdParameter, productTypeIdParameter, visibleIndividuallyOnlyParameter, markedAsNewOnlyParameter, productTagIdParameter, featuredProductsParameter, priceMinParameter, priceMaxParameter, keywordsParameter, searchDescriptionsParameter, searchSkuParameter, searchProductTagsParameter, useFullTextSearchParameter, fullTextModeParameter, filteredSpecsParameter, languageIdParameter, orderByParameter, allowedCustomerRoleIdsParameter, pageIndexParameter, pageSizeParameter, showHiddenParameter, overridePublishedParameter, overrideHideMasterProductsParameter, loadFilterableSpecificationAttributeOptionIdsParameter, filterableSpecificationAttributeOptionIds, totalRecords);
        }
    
        public virtual int DeleteGuests(Nullable<bool> onlyWithoutShoppingCart, Nullable<System.DateTime> createdFromUtc, Nullable<System.DateTime> createdToUtc, ObjectParameter totalRecordsDeleted)
        {
            var onlyWithoutShoppingCartParameter = onlyWithoutShoppingCart.HasValue ?
                new ObjectParameter("OnlyWithoutShoppingCart", onlyWithoutShoppingCart) :
                new ObjectParameter("OnlyWithoutShoppingCart", typeof(bool));
    
            var createdFromUtcParameter = createdFromUtc.HasValue ?
                new ObjectParameter("CreatedFromUtc", createdFromUtc) :
                new ObjectParameter("CreatedFromUtc", typeof(System.DateTime));
    
            var createdToUtcParameter = createdToUtc.HasValue ?
                new ObjectParameter("CreatedToUtc", createdToUtc) :
                new ObjectParameter("CreatedToUtc", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DeleteGuests", onlyWithoutShoppingCartParameter, createdFromUtcParameter, createdToUtcParameter, totalRecordsDeleted);
        }
    
        public virtual int FullText_Disable()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("FullText_Disable");
        }
    
        public virtual int FullText_Enable()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("FullText_Enable");
        }
    
        public virtual ObjectResult<Nullable<int>> FullText_IsSupported()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("FullText_IsSupported");
        }
    
        public virtual int LanguagePackImport(Nullable<int> languageId, string xmlPackage)
        {
            var languageIdParameter = languageId.HasValue ?
                new ObjectParameter("LanguageId", languageId) :
                new ObjectParameter("LanguageId", typeof(int));
    
            var xmlPackageParameter = xmlPackage != null ?
                new ObjectParameter("XmlPackage", xmlPackage) :
                new ObjectParameter("XmlPackage", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("LanguagePackImport", languageIdParameter, xmlPackageParameter);
        }
    
        public virtual int Migration()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Migration");
        }
    
        public virtual int ProductLoadAllPaged(string categoryIds, Nullable<int> manufacturerId, Nullable<int> storeId, Nullable<int> vendorId, Nullable<int> warehouseId, Nullable<int> masterProductId, Nullable<int> productTypeId, Nullable<bool> visibleIndividuallyOnly, Nullable<bool> markedAsNewOnly, Nullable<int> productTagId, Nullable<bool> featuredProducts, Nullable<decimal> priceMin, Nullable<decimal> priceMax, string keywords, Nullable<bool> searchDescriptions, Nullable<bool> searchManufacturerPartNumber, Nullable<bool> searchSku, Nullable<bool> searchProductTags, Nullable<bool> useFullTextSearch, Nullable<int> fullTextMode, string filteredSpecs, Nullable<int> languageId, Nullable<int> orderBy, string allowedCustomerRoleIds, Nullable<int> pageIndex, Nullable<int> pageSize, Nullable<bool> showHidden, Nullable<bool> overridePublished, ObjectParameter overrideHideMasterProducts, ObjectParameter loadFilterableSpecificationAttributeOptionIds, ObjectParameter filterableSpecificationAttributeOptionIds, ObjectParameter totalRecords)
        {
            var categoryIdsParameter = categoryIds != null ?
                new ObjectParameter("CategoryIds", categoryIds) :
                new ObjectParameter("CategoryIds", typeof(string));
    
            var manufacturerIdParameter = manufacturerId.HasValue ?
                new ObjectParameter("ManufacturerId", manufacturerId) :
                new ObjectParameter("ManufacturerId", typeof(int));
    
            var storeIdParameter = storeId.HasValue ?
                new ObjectParameter("StoreId", storeId) :
                new ObjectParameter("StoreId", typeof(int));
    
            var vendorIdParameter = vendorId.HasValue ?
                new ObjectParameter("VendorId", vendorId) :
                new ObjectParameter("VendorId", typeof(int));
    
            var warehouseIdParameter = warehouseId.HasValue ?
                new ObjectParameter("WarehouseId", warehouseId) :
                new ObjectParameter("WarehouseId", typeof(int));
    
            var masterProductIdParameter = masterProductId.HasValue ?
                new ObjectParameter("MasterProductId", masterProductId) :
                new ObjectParameter("MasterProductId", typeof(int));
    
            var productTypeIdParameter = productTypeId.HasValue ?
                new ObjectParameter("ProductTypeId", productTypeId) :
                new ObjectParameter("ProductTypeId", typeof(int));
    
            var visibleIndividuallyOnlyParameter = visibleIndividuallyOnly.HasValue ?
                new ObjectParameter("VisibleIndividuallyOnly", visibleIndividuallyOnly) :
                new ObjectParameter("VisibleIndividuallyOnly", typeof(bool));
    
            var markedAsNewOnlyParameter = markedAsNewOnly.HasValue ?
                new ObjectParameter("MarkedAsNewOnly", markedAsNewOnly) :
                new ObjectParameter("MarkedAsNewOnly", typeof(bool));
    
            var productTagIdParameter = productTagId.HasValue ?
                new ObjectParameter("ProductTagId", productTagId) :
                new ObjectParameter("ProductTagId", typeof(int));
    
            var featuredProductsParameter = featuredProducts.HasValue ?
                new ObjectParameter("FeaturedProducts", featuredProducts) :
                new ObjectParameter("FeaturedProducts", typeof(bool));
    
            var priceMinParameter = priceMin.HasValue ?
                new ObjectParameter("PriceMin", priceMin) :
                new ObjectParameter("PriceMin", typeof(decimal));
    
            var priceMaxParameter = priceMax.HasValue ?
                new ObjectParameter("PriceMax", priceMax) :
                new ObjectParameter("PriceMax", typeof(decimal));
    
            var keywordsParameter = keywords != null ?
                new ObjectParameter("Keywords", keywords) :
                new ObjectParameter("Keywords", typeof(string));
    
            var searchDescriptionsParameter = searchDescriptions.HasValue ?
                new ObjectParameter("SearchDescriptions", searchDescriptions) :
                new ObjectParameter("SearchDescriptions", typeof(bool));
    
            var searchManufacturerPartNumberParameter = searchManufacturerPartNumber.HasValue ?
                new ObjectParameter("SearchManufacturerPartNumber", searchManufacturerPartNumber) :
                new ObjectParameter("SearchManufacturerPartNumber", typeof(bool));
    
            var searchSkuParameter = searchSku.HasValue ?
                new ObjectParameter("SearchSku", searchSku) :
                new ObjectParameter("SearchSku", typeof(bool));
    
            var searchProductTagsParameter = searchProductTags.HasValue ?
                new ObjectParameter("SearchProductTags", searchProductTags) :
                new ObjectParameter("SearchProductTags", typeof(bool));
    
            var useFullTextSearchParameter = useFullTextSearch.HasValue ?
                new ObjectParameter("UseFullTextSearch", useFullTextSearch) :
                new ObjectParameter("UseFullTextSearch", typeof(bool));
    
            var fullTextModeParameter = fullTextMode.HasValue ?
                new ObjectParameter("FullTextMode", fullTextMode) :
                new ObjectParameter("FullTextMode", typeof(int));
    
            var filteredSpecsParameter = filteredSpecs != null ?
                new ObjectParameter("FilteredSpecs", filteredSpecs) :
                new ObjectParameter("FilteredSpecs", typeof(string));
    
            var languageIdParameter = languageId.HasValue ?
                new ObjectParameter("LanguageId", languageId) :
                new ObjectParameter("LanguageId", typeof(int));
    
            var orderByParameter = orderBy.HasValue ?
                new ObjectParameter("OrderBy", orderBy) :
                new ObjectParameter("OrderBy", typeof(int));
    
            var allowedCustomerRoleIdsParameter = allowedCustomerRoleIds != null ?
                new ObjectParameter("AllowedCustomerRoleIds", allowedCustomerRoleIds) :
                new ObjectParameter("AllowedCustomerRoleIds", typeof(string));
    
            var pageIndexParameter = pageIndex.HasValue ?
                new ObjectParameter("PageIndex", pageIndex) :
                new ObjectParameter("PageIndex", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var showHiddenParameter = showHidden.HasValue ?
                new ObjectParameter("ShowHidden", showHidden) :
                new ObjectParameter("ShowHidden", typeof(bool));
    
            var overridePublishedParameter = overridePublished.HasValue ?
                new ObjectParameter("OverridePublished", overridePublished) :
                new ObjectParameter("OverridePublished", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ProductLoadAllPaged", categoryIdsParameter, manufacturerIdParameter, storeIdParameter, vendorIdParameter, warehouseIdParameter, masterProductIdParameter, productTypeIdParameter, visibleIndividuallyOnlyParameter, markedAsNewOnlyParameter, productTagIdParameter, featuredProductsParameter, priceMinParameter, priceMaxParameter, keywordsParameter, searchDescriptionsParameter, searchManufacturerPartNumberParameter, searchSkuParameter, searchProductTagsParameter, useFullTextSearchParameter, fullTextModeParameter, filteredSpecsParameter, languageIdParameter, orderByParameter, allowedCustomerRoleIdsParameter, pageIndexParameter, pageSizeParameter, showHiddenParameter, overridePublishedParameter, overrideHideMasterProducts, loadFilterableSpecificationAttributeOptionIds, filterableSpecificationAttributeOptionIds, totalRecords);
        }
    
        public virtual int ProductLoadAllPaged_20160628(string categoryIds, Nullable<int> manufacturerId, Nullable<int> storeId, Nullable<int> vendorId, Nullable<int> warehouseId, Nullable<int> masterProductId, Nullable<int> productTypeId, Nullable<bool> visibleIndividuallyOnly, Nullable<bool> markedAsNewOnly, Nullable<int> productTagId, Nullable<bool> featuredProducts, Nullable<decimal> priceMin, Nullable<decimal> priceMax, string keywords, Nullable<bool> searchDescriptions, Nullable<bool> searchSku, Nullable<bool> searchProductTags, Nullable<bool> useFullTextSearch, Nullable<int> fullTextMode, string filteredSpecs, Nullable<int> languageId, Nullable<int> orderBy, string allowedCustomerRoleIds, Nullable<int> pageIndex, Nullable<int> pageSize, Nullable<bool> showHidden, Nullable<bool> overridePublished, Nullable<bool> overrideHideMasterProducts, Nullable<bool> loadFilterableSpecificationAttributeOptionIds, ObjectParameter filterableSpecificationAttributeOptionIds, ObjectParameter totalRecords)
        {
            var categoryIdsParameter = categoryIds != null ?
                new ObjectParameter("CategoryIds", categoryIds) :
                new ObjectParameter("CategoryIds", typeof(string));
    
            var manufacturerIdParameter = manufacturerId.HasValue ?
                new ObjectParameter("ManufacturerId", manufacturerId) :
                new ObjectParameter("ManufacturerId", typeof(int));
    
            var storeIdParameter = storeId.HasValue ?
                new ObjectParameter("StoreId", storeId) :
                new ObjectParameter("StoreId", typeof(int));
    
            var vendorIdParameter = vendorId.HasValue ?
                new ObjectParameter("VendorId", vendorId) :
                new ObjectParameter("VendorId", typeof(int));
    
            var warehouseIdParameter = warehouseId.HasValue ?
                new ObjectParameter("WarehouseId", warehouseId) :
                new ObjectParameter("WarehouseId", typeof(int));
    
            var masterProductIdParameter = masterProductId.HasValue ?
                new ObjectParameter("MasterProductId", masterProductId) :
                new ObjectParameter("MasterProductId", typeof(int));
    
            var productTypeIdParameter = productTypeId.HasValue ?
                new ObjectParameter("ProductTypeId", productTypeId) :
                new ObjectParameter("ProductTypeId", typeof(int));
    
            var visibleIndividuallyOnlyParameter = visibleIndividuallyOnly.HasValue ?
                new ObjectParameter("VisibleIndividuallyOnly", visibleIndividuallyOnly) :
                new ObjectParameter("VisibleIndividuallyOnly", typeof(bool));
    
            var markedAsNewOnlyParameter = markedAsNewOnly.HasValue ?
                new ObjectParameter("MarkedAsNewOnly", markedAsNewOnly) :
                new ObjectParameter("MarkedAsNewOnly", typeof(bool));
    
            var productTagIdParameter = productTagId.HasValue ?
                new ObjectParameter("ProductTagId", productTagId) :
                new ObjectParameter("ProductTagId", typeof(int));
    
            var featuredProductsParameter = featuredProducts.HasValue ?
                new ObjectParameter("FeaturedProducts", featuredProducts) :
                new ObjectParameter("FeaturedProducts", typeof(bool));
    
            var priceMinParameter = priceMin.HasValue ?
                new ObjectParameter("PriceMin", priceMin) :
                new ObjectParameter("PriceMin", typeof(decimal));
    
            var priceMaxParameter = priceMax.HasValue ?
                new ObjectParameter("PriceMax", priceMax) :
                new ObjectParameter("PriceMax", typeof(decimal));
    
            var keywordsParameter = keywords != null ?
                new ObjectParameter("Keywords", keywords) :
                new ObjectParameter("Keywords", typeof(string));
    
            var searchDescriptionsParameter = searchDescriptions.HasValue ?
                new ObjectParameter("SearchDescriptions", searchDescriptions) :
                new ObjectParameter("SearchDescriptions", typeof(bool));
    
            var searchSkuParameter = searchSku.HasValue ?
                new ObjectParameter("SearchSku", searchSku) :
                new ObjectParameter("SearchSku", typeof(bool));
    
            var searchProductTagsParameter = searchProductTags.HasValue ?
                new ObjectParameter("SearchProductTags", searchProductTags) :
                new ObjectParameter("SearchProductTags", typeof(bool));
    
            var useFullTextSearchParameter = useFullTextSearch.HasValue ?
                new ObjectParameter("UseFullTextSearch", useFullTextSearch) :
                new ObjectParameter("UseFullTextSearch", typeof(bool));
    
            var fullTextModeParameter = fullTextMode.HasValue ?
                new ObjectParameter("FullTextMode", fullTextMode) :
                new ObjectParameter("FullTextMode", typeof(int));
    
            var filteredSpecsParameter = filteredSpecs != null ?
                new ObjectParameter("FilteredSpecs", filteredSpecs) :
                new ObjectParameter("FilteredSpecs", typeof(string));
    
            var languageIdParameter = languageId.HasValue ?
                new ObjectParameter("LanguageId", languageId) :
                new ObjectParameter("LanguageId", typeof(int));
    
            var orderByParameter = orderBy.HasValue ?
                new ObjectParameter("OrderBy", orderBy) :
                new ObjectParameter("OrderBy", typeof(int));
    
            var allowedCustomerRoleIdsParameter = allowedCustomerRoleIds != null ?
                new ObjectParameter("AllowedCustomerRoleIds", allowedCustomerRoleIds) :
                new ObjectParameter("AllowedCustomerRoleIds", typeof(string));
    
            var pageIndexParameter = pageIndex.HasValue ?
                new ObjectParameter("PageIndex", pageIndex) :
                new ObjectParameter("PageIndex", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var showHiddenParameter = showHidden.HasValue ?
                new ObjectParameter("ShowHidden", showHidden) :
                new ObjectParameter("ShowHidden", typeof(bool));
    
            var overridePublishedParameter = overridePublished.HasValue ?
                new ObjectParameter("OverridePublished", overridePublished) :
                new ObjectParameter("OverridePublished", typeof(bool));
    
            var overrideHideMasterProductsParameter = overrideHideMasterProducts.HasValue ?
                new ObjectParameter("OverrideHideMasterProducts", overrideHideMasterProducts) :
                new ObjectParameter("OverrideHideMasterProducts", typeof(bool));
    
            var loadFilterableSpecificationAttributeOptionIdsParameter = loadFilterableSpecificationAttributeOptionIds.HasValue ?
                new ObjectParameter("LoadFilterableSpecificationAttributeOptionIds", loadFilterableSpecificationAttributeOptionIds) :
                new ObjectParameter("LoadFilterableSpecificationAttributeOptionIds", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ProductLoadAllPaged_20160628", categoryIdsParameter, manufacturerIdParameter, storeIdParameter, vendorIdParameter, warehouseIdParameter, masterProductIdParameter, productTypeIdParameter, visibleIndividuallyOnlyParameter, markedAsNewOnlyParameter, productTagIdParameter, featuredProductsParameter, priceMinParameter, priceMaxParameter, keywordsParameter, searchDescriptionsParameter, searchSkuParameter, searchProductTagsParameter, useFullTextSearchParameter, fullTextModeParameter, filteredSpecsParameter, languageIdParameter, orderByParameter, allowedCustomerRoleIdsParameter, pageIndexParameter, pageSizeParameter, showHiddenParameter, overridePublishedParameter, overrideHideMasterProductsParameter, loadFilterableSpecificationAttributeOptionIdsParameter, filterableSpecificationAttributeOptionIds, totalRecords);
        }
    
        public virtual ObjectResult<ProductTagCountLoadAll_Result> ProductTagCountLoadAll(Nullable<int> storeId)
        {
            var storeIdParameter = storeId.HasValue ?
                new ObjectParameter("StoreId", storeId) :
                new ObjectParameter("StoreId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ProductTagCountLoadAll_Result>("ProductTagCountLoadAll", storeIdParameter);
        }
    
        public virtual int SAP_ReSubmitOrderItem(Nullable<int> orderNumber, Nullable<int> status, string productGL)
        {
            var orderNumberParameter = orderNumber.HasValue ?
                new ObjectParameter("OrderNumber", orderNumber) :
                new ObjectParameter("OrderNumber", typeof(int));
    
            var statusParameter = status.HasValue ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(int));
    
            var productGLParameter = productGL != null ?
                new ObjectParameter("ProductGL", productGL) :
                new ObjectParameter("ProductGL", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SAP_ReSubmitOrderItem", orderNumberParameter, statusParameter, productGLParameter);
        }
    
        public virtual int SAP_SubmitOrderItem(Nullable<int> orderItem, Nullable<int> status)
        {
            var orderItemParameter = orderItem.HasValue ?
                new ObjectParameter("OrderItem", orderItem) :
                new ObjectParameter("OrderItem", typeof(int));
    
            var statusParameter = status.HasValue ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SAP_SubmitOrderItem", orderItemParameter, statusParameter);
        }
    
        public virtual int TruncateTable(string name)
        {
            var nameParameter = name != null ?
                new ObjectParameter("name", name) :
                new ObjectParameter("name", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("TruncateTable", nameParameter);
        }
    }
}
